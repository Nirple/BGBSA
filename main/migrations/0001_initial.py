# Generated by Django 5.0.2 on 2024-02-28 11:45

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(-2500), django.core.validators.MaxValueValidator(2025)])),
                ('url', models.CharField(max_length=255)),
                ('rank', models.PositiveIntegerField()),
                ('rating', models.PositiveIntegerField()),
                ('subtype', models.CharField(max_length=50)),
                ('scraped_at', models.DateTimeField(blank=True, null=True)),
                ('img', models.CharField(blank=True, max_length=250, null=True)),
                ('pitch', models.CharField(blank=True, max_length=256, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('min_play_time', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('max_play_time', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('min_players', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('max_players', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('rec_min_players', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('rec_max_players', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('best_min_players', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('best_max_players', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('weight_avg', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(20000)])),
                ('is_negotiable', models.BooleanField(default=True)),
                ('is_shipping', models.BooleanField(default=False)),
                ('condition', models.CharField(choices=[('New', 'New: still in shrink wrap or unpunched'), ('Good', 'Good: only played a few times or no damage'), ('Used', 'Used: wear and tear showing or box has some dents'), ('Parts', 'Parts: components missing or broken'), ('Other', 'Other: specify in comments')], default='Good', max_length=50)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_hidden', models.BooleanField(default=False)),
                ('is_sold', models.BooleanField(default=False)),
                ('sold_comment', models.TextField(blank=True, null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listings', to='main.game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'game')},
            },
        ),
    ]
